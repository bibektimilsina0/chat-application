// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String @unique
  name String
  password String
  sentRequests FriendRequest[] @relation("sender")
  receivedRequests FriendRequest[] @relation("receiver")
  messagesSent Message[] @relation("sender")
  messagesReceived Message[] @relation("receiver")
}
model FriendRequest{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  senderId Int
  receiverId Int
  status String // e.g., "pending", "accepted", "rejected"
  
  sender User @relation("sender", fields: [senderId], references: [id])
  receiver User @relation("receiver", fields: [receiverId],references: [id])
}
model Message{
  id Int @id @default(autoincrement())
  senderId Int
  receiverId Int
  content String
  timestamp DateTime @default(now())
  sender User @relation("sender", fields: [senderId],references: [id])
  receiver User @relation("receiver", fields: [receiverId],references: [id])
  read Boolean @default(false) // Indicates if the message has been read
  

}